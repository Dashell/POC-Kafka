version: '3.7'

services:
  pocsqldata:
    image: postgres

  zookeeper:
    restart: always
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    restart: always
    image: wurstmeister/kafka:0.10.2.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.0.14
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.14:9092
      KAFKA_CREATE_TOPICS: "delete-product:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  product-api:
    image: product-api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Product/Product.API/Dockerfile
    depends_on:
      - pocsqldata
      - kafka

  recipe-api-1:
    restart: always
    image: recipe-api-1:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Recipe/Recipe.API/Dockerfile
    depends_on:
      - pocsqldata
      - kafka

  recipe-api-2:
    restart: always
    image: recipe-api-2:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Recipe/Recipe.API/Dockerfile
    depends_on:
      - pocsqldata
      - kafka

  recipe-api-3:
    restart: always
    image: recipe-api-3:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Recipe/Recipe.API/Dockerfile
    depends_on:
      - pocsqldata
      - kafka

